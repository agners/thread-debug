#!/bin/bash

matter_ws="ws://core-matter-server:5580/ws"

if [ "$(docker inspect -f '{{.State.Running}}' addon_core_matter_server 2>/dev/null)" != "true" ]; then
  echo "Matter Server add-on not installed or not running"
  exit 1
fi

if ! command -v websocat >/dev/null 2>&1; then
  echo "Error: 'websocat' is not installed."
  echo "You can install it with:"
  echo "  apk add websocat"
  exit 1
fi

function show_info() {
  json=$(websocat --exit-on-eof -1 "$matter_ws")
  printf "Compressed Fabric ID: %016X\n" $(echo "$json" | jq -r '.compressed_fabric_id')
  echo "SDK Version: $(echo "$json" | jq -r '.sdk_version')"
}

function send_command() {
  local msgid="$1"
  local cmd="$2"
  local args="$3"

  # Disable job notifications temporarily
  set +m  # Disable monitor mode (job control)

  # Start coprocess, suppress job startup messages
  { coproc WS { websocat --linemode-strip-newlines --buffer-size=1048576 "$matter_ws"; }; } 2>/dev/null

  read -r welcome <&"${WS[0]}"

  if [ -n "$args" ]; then
    jq -nc --arg msgid "$msgid" --arg cmd "$cmd" --argjson args "$args" \
      '{message_id: $msgid, command: $cmd, args: $args}' >&"${WS[1]}"
  else
    jq -nc --arg msgid "$msgid" --arg cmd "$cmd" \
      '{message_id: $msgid, command: $cmd}' >&"${WS[1]}"
  fi

  read -r response <&"${WS[0]}"

  # Close FDs and wait for coproc to finish
  exec {WS[1]}>&-
  exec {WS[0]}>&-

  wait "$WS_PID" 2>/dev/null

  # Restore job notifications if desired
  set -m
}

function list_nodes() {
  send_command "2" "get_nodes"

  fabric=$(echo "$welcome" | jq -r '.compressed_fabric_id')

  echo -e "Node ID  DNS-SD Name                             Manufacturer           Product Name                        Date Commissioned             Thread Network"
  echo "---------------------------------------------------------------------------------------------------------------------------------------------------------------"

  echo "$response" | jq -r '
    .result[] |
    [
      .node_id,
      .attributes["0/40/1"],
      .attributes["0/40/3"],
      .date_commissioned,
      (.attributes["0/53/2"] // "â€”")
    ] | @tsv
  ' | while IFS=$'\t' read -r node_id manufacturer product_name date_commissioned thread_name; do
    dns_sd_name=$(printf "%016X-%016X" "$fabric" "$node_id")
    printf "%-8s %-40s %-20s %-35s %-30s %-20s\n" "$node_id" "$dns_sd_name" "$manufacturer" "$product_name" "$date_commissioned" "$thread_name"
  done
}

case "$1" in
  info)
    show_info
    ;;
  list-nodes)
    list_nodes
    ;;
  *)
    echo "Usage: matter-server {info|list-nodes}"
    exit 1
    ;;
esac
